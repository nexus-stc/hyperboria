---

logging:
  disable_existing_loggers: false
  formatters:
    base:
      class: library.logging.formatters.BaseFormatter
    default:
      class: library.logging.formatters.DefaultFormatter
    traceback:
      class: library.logging.formatters.TracebackFormatter
  handlers:
    console:
      class: logging.StreamHandler
      level: WARNING
      stream: 'ext://sys.stderr'
    debug:
      class: library.logging.handlers.BaseFileHandler
      filename: '{{ log_path }}/debug.log'
      formatter: default
      level: DEBUG
    error:
      class: library.logging.handlers.BaseFileHandler
      filename: '{{ log_path }}/error.log'
      formatter: default
      level: ERROR
    operation:
      class: library.logging.handlers.BaseFileHandler
      filename: '{{ log_path }}/operation.log'
      formatter: base
      level: DEBUG
    statbox:
      class: library.logging.handlers.BaseFileHandler
      filename: '{{ log_path }}/statbox.log'
      formatter: default
      level: INFO
    traceback:
      class: library.logging.handlers.BaseFileHandler
      filename: '{{ log_path }}/traceback.log'
      formatter: traceback
      level: ERROR
    warning:
      class: library.logging.handlers.BaseFileHandler
      filename: '{{ log_path }}/warning.log'
      formatter: default
      level: WARNING
  loggers:
    aiobaseclient:
      handlers:
        - error
        - warning
      propagate: false
    chardet:
      handlers:
        - error
      propagate: false
    debug:
      handlers:
        - debug
      propagate: false
    error:
      handlers:
        - console
        - error
        - traceback
        - warning
      propagate: false
    operation:
      handlers:
        - operation
      propagate: false
    statbox:
      handlers:
        - statbox
      propagate: false
    telethon:
      handlers:
        - error
        - warning
      propagate: false
  root:
    handlers:
      - console
      - debug
    level: DEBUG
  version: 1
